version: '3.7'

services:
  api:
    container_name: boilerplate-api
    command: yarn dev:server
    restart: unless-stopped
    build: .
    ports:
      - ${PORT}:${PORT}
      - 9229:9229
    environment:
      - DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@database:5432/${DB_NAME}?connect_timeout=300
      - REDIS_URL=boilerplate-redis
    volumes:
      - .:/usr/app
    networks:
      - boilerplate-network
    env_file:
      - .env
    depends_on:
      - database
      - redis
      # - proxy

  database:
    container_name: boilerplate-database
    image: postgres:15.3-alpine
    restart: unless-stopped
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - boilerplate-volume:/data/postgres
    env_file:
      - .env
    networks:
      - boilerplate-network

  redis:
    container_name: boilerplate-redis
    image: redis:7-alpine
    ports:
      - 6379:6379
    volumes:
      - boilerplate-volume:/data/redis
    networks:
      - boilerplate-network

  proxy:
    container_name: boilerplate-proxy
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '443:443'
      - '80:80'
      - '81:81'
    volumes:
      - ./.docker/nginx/letsencrypt:/etc/letsencrypt
      - ./.docker/nginx/data:/data
    networks:
      - boilerplate-network

volumes:
  boilerplate-volume:
    driver: local

networks:
  boilerplate-network:
    driver: bridge
